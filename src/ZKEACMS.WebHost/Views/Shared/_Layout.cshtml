@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using Microsoft.Extensions.Options
@using Easy.Options
@model LayoutEntity
@{
    if (Model == null)
    {
        return;
    }
    Style.Reqiured("Easy").AtFoot();
}
@inject IOptions<CultureOption> cultureOption
<!DOCTYPE html>
<html lang="@cultureOption.Value.Code">
<head>
    <title>@Model.Page.Title</title>
    <meta name="keywords" content="@Model.Page.MetaKeyWorlds" />
    <meta name="description" content="@Model.Page.MetaDescription" />
    <link href="@Url.PathContent(Model.Page.Favicon)" rel="shortcut icon" type="image/x-icon" />
    @await Html.PartialAsync("Partial.PageHeader")
</head>
<body class="front">
    @if (Authorizer.Authorize(PermissionKeys.ManagePage) && (ApplicationContext as CMSApplicationContext).PageMode != ZKEACMS.Filter.PageViewMode.ViewOnly)
    {
        <div class="preview-toolbar hover-text hidden-xs" style="position:fixed; z-index:10000;left:5px;top:5px;">
            <div class="zk-btn-group">
                <a class="zk-btn zk-btn-primary sort-handle">
                    <i class="glyphicon glyphicon-move"></i>
                </a>
                @if (!Model.Page.IsPublishedPage)
                {
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("Design", "Page", new { Model.Page.ID })">
                        <i class="glyphicon glyphicon-pencil"></i>
                        @L("Edit")
                    </a>
                    @if (Model.Page.PublishDate.HasValue)
                    {
                        <a class="zk-btn zk-btn-primary" href="@Url.Content(Model.Page.Url)">
                            <i class="glyphicon glyphicon-eye-open"></i>
                            @L("View Published Page")
                        </a>
                    }
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("Index", "Page",new { PageId=Model.Page.ID })">
                        <i class="glyphicon glyphicon-th-list"></i>
                        @L("Overview")
                    </a>
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("PublishPage", "Page", new { Model.Page.ID, ReturnUrl = Model.Page.Url})">
                        <i class="glyphicon glyphicon-open"></i>
                        @L("Publish")
                    </a>
                    if (Model.CurrentTheme != null && Model.CurrentTheme.IsPreView)
                    {
                        <a class="zk-btn zk-btn-primary" href="@Url.Action("CancelPreView", "Theme")">
                            <i class="glyphicon glyphicon-transfer"></i>
                            @L("Close")
                            @Model.CurrentTheme.Title
                            @L("Theme")
                        </a>
                    }
                }
                else if (Model.PreViewPage != null)
                {
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("Design", "Page", new { Model.PreViewPage.ID})">
                        <i class="glyphicon glyphicon-pencil"></i>
                        @L("Edit")
                    </a>
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("RedirectView", "Page", new { ID = Model.PreViewPage.ID})">
                        <i class="glyphicon glyphicon-eye-open"></i>
                        @L("View Pending Page")
                    </a>
                    if (Model.CurrentTheme != null && Model.CurrentTheme.IsPreView)
                    {
                        <a class="zk-btn zk-btn-primary" href="@Url.Action("CancelPreView", "Theme")">
                            <i class="glyphicon glyphicon-transfer"></i>
                            @L("Close")
                            @Model.CurrentTheme.Title
                            @L("Theme")
                        </a>
                    }
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("Index", "Page",new { PageId = Model.PreViewPage.ID })">
                        <i class="glyphicon glyphicon-th-list"></i>
                        @L("Overview")
                    </a>
                    <a class="zk-btn zk-btn-primary" href="@Url.Action("Logout", "Account", new { returnurl = ViewContext.HttpContext.Request.Path.Value })">
                        <i class="glyphicon glyphicon-off"></i>
                        @L("Sign Out")
                    </a>
                }
            </div>
        </div>
        using (Script.AtFoot())
        {
            <script type="text/javascript">
                var toolBar = $(".preview-toolbar");
                $(".sort-handle", toolBar).DragElement(toolBar);
            </script>
        }
    }

    <div>
        @RenderBody()
    </div>
    @await Html.PartialAsync("Partial.PageFooter")
</body>

</html>